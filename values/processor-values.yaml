# Default values for cve-processor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

image:
  repository: "vkneu7/cve-processor"
  pullPolicy: "Always"
  # Overrides the image tag whose default is the chart appVersion.
  tag: "delta1"
container:
  name: cve-processor
service:
  port: 8080
livenessProbe:
  httpGet:
    path: /healthz
    port: 8080
  initialDelaySeconds: 600
  periodSeconds: 3
readinessProbe:
  httpGet:
    path: /readiness
    port: 8080
  initialDelaySeconds: 600
  periodSeconds: 5

resources:
  limits:
    cpu: 2000m
    memory: 512Mi
  requests:
    cpu: 1000m
    memory: 128Mi

env:
  - name: DB_HOST
    value: postgresql # host.docker.internal for local postgres
  - name: DB_USER
    value: web_app
  - name: DB_PASSWORD
    valueFrom: 
      secretKeyRef:
        name: db-password-secret
        key: DB_PASSWORD
  - name: DB
    value: cve
  - name: DB_PORT
    value: "5432"
  - name: DB_SCHEMA
    value: cve
  - name: KAFKA_USER
    value: user1
  - name: KAFKA_PASSWORD
    valueFrom: 
      secretKeyRef:
        name: kafka-secret
        key: KAFKA_PASSWORD
  - name: GOARCH
    value: amd64
  - name: KAFKA_BROKER_0
    value: kafka-controller-0.kafka-controller-headless.kafka.svc.cluster.local:9092
  - name: KAFKA_BROKER_1
    value: kafka-controller-1.kafka-controller-headless.kafka.svc.cluster.local:9092
  - name: KAFKA_BROKER_2
    value: kafka-controller-2.kafka-controller-headless.kafka.svc.cluster.local:9092
  - name: URL
    value: "https://github.com/CVEProject/cvelistV5/archive/refs/heads/main.zip"

initContainer:
  enabled: true
  image:
    repository: vkneu7/flyway
    tag: "v1.1.1"
  env:
    - name: DB_HOST
      value: postgresql  # host.docker.internal for local postgres, here we are using postgresql service name
    - name: DB_USER
      value: web_app
    - name: DB_PASSWORD
      valueFrom: 
        secretKeyRef:
          name: db-password-secret
          key: DB_PASSWORD
    - name: DB_NAME
      value: cve
    - name: DB_PORT
      value: "5432"    
    - name: DB_SCHEMA
      value: cve

# secrets: 
#   dbPassword: "placeholder_for_db_password"
#   dockerConfigJson: "placeholder_for_docker_config_json"
#   kafkaPassword: "placeholder_for_kafka_passwsecrets:

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}
# podLabels: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
